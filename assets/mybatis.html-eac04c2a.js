import{_ as p,W as o,X as c,Y as n,Z as s,$ as e,a0 as a,C as l}from"./framework-715d567f.js";const i={},u=a('<h2 id="_1-mybatis介绍" tabindex="-1"><a class="header-anchor" href="#_1-mybatis介绍" aria-hidden="true">#</a> 1.Mybatis介绍</h2><p>MyBatis 是一款优秀的持久层框架，它支持<code>自定义 SQL、存储过程以及高级映射</code>。</p><p>MyBatis <code>免除了几乎所有的 JDBC 代码</code>以及<code>设置参数和获取结果集</code>的工作。</p><h2 id="_2-关于jdbc" tabindex="-1"><a class="header-anchor" href="#_2-关于jdbc" aria-hidden="true">#</a> 2.关于JDBC</h2>',4),r={href:"http://www.mybatis.cn/archives/765.html",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="_2-1-什么是jdbc" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是jdbc" aria-hidden="true">#</a> 2.1 什么是JDBC</h3><p>Java数据库连接 <code>Java Database Connectivity</code>，简称JDBC。</p><p>JDBC是一类标准接口，<strong>制定了统一访问各类关系数据库的标准接口</strong>。</p><p>JDBC是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，提供了诸如查询和更新数据库中数据的方法。</p><h3 id="_2-2-什么是驱动" tabindex="-1"><a class="header-anchor" href="#_2-2-什么是驱动" aria-hidden="true">#</a> 2.2 什么是驱动</h3><p>JDBC是接口，<strong>驱动是接口的实现类</strong>，没有驱动将无法完成数据库连接，从而不能操作数据库！</p><p><strong>每个数据库厂商都需要提供自己的驱动，用来连接自己公司的数据库</strong>，也就是说驱动一般都由数据库生成厂商提供。</p><h3 id="_2-3-jdbc开发步骤" tabindex="-1"><a class="header-anchor" href="#_2-3-jdbc开发步骤" aria-hidden="true">#</a> 2.3 JDBC开发步骤</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> 
<span class="token punctuation">{</span>
    <span class="token comment">//1.注册和加载数据库驱动，如加载MySQL数据库驱动</span>
    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//2.获得数据库连接，DriverManager</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/database_name&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Strign</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//3.获得语句执行对象，然后执行SQL语句，获取执行结果，最后释放资源</span>
    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;insert into user(username, sex, address) values(&#39;张三&#39;,&#39;1&#39;,&#39;北京市&#39;)&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//创建一个Statement对象</span>
    stms<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//执行SQL语句</span>
    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment">//关闭数据库连接对象</span>
    
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-mybatis原理" tabindex="-1"><a class="header-anchor" href="#_3-mybatis原理" aria-hidden="true">#</a> 3.Mybatis原理</h2><h3 id="_3-1-改变" tabindex="-1"><a class="header-anchor" href="#_3-1-改变" aria-hidden="true">#</a> 3.1 改变</h3><p>Mybatis核心流程其实与JDBC一脉相承，但是做出了改变：</p><ul><li><p>避免了JDBC代码和手动设置参数、获取结果集</p></li><li><p>封装了JDBC，简化了加载驱动、创建连接、创建<code>Statement</code>等繁杂的过程，开发者只需关注SQL语句本身</p></li><li><p>MyBatis将程序中大量的SQL语句剥离出来，<code>使用XML文件或注解的方式实现SQL的灵活配置</code>，<code>将SQL语句与程序代码分离</code>，在不修改程序代码的情况下，直接在配置文件中修改SQL语句</p></li></ul><hr><h3 id="_3-2-基本工作原理" tabindex="-1"><a class="header-anchor" href="#_3-2-基本工作原理" aria-hidden="true">#</a> 3.2 基本工作原理</h3>`,15),k={href:"http://www.mybatis.cn/archives/706.html",target:"_blank",rel:"noopener noreferrer"},m=a(`<p>先封装SQL，接着调用JDBC操作数据库，最后把数据库返回的表结果封装成Java类</p><table><thead><tr><th></th><th>JDBC</th><th>Mybatis</th></tr></thead><tbody><tr><td>注册数据库连接</td><td>DriverManager</td><td></td></tr><tr><td>数据库连接对象</td><td>Connection</td><td>SqlSession对象</td></tr><tr><td>操作数据库SQL语句的对象</td><td>Statement/PrepareStatement</td><td>Executor接口</td></tr><tr><td>结果集或一张虚拟表</td><td>ResultSet</td><td>ResultHandler</td></tr><tr><td>封装映射信息</td><td></td><td>MappedStatement</td></tr></tbody></table><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202304181446542.png" alt="1" loading="lazy"></p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>（1）读取MyBatis的配置文件。mybatis-config.xml为MyBatis的全局配置文件，用于配置数据库连接信息。

（2）加载映射文件。映射文件即SQL映射文件，该文件中配置了操作数据库的SQL语句，需要在MyBatis配置文件mybatis-config.xml中加载。mybatis-config.xml 文件可以加载多个映射文件，每个文件对应数据库中的一张表。

（3）构造会话工厂。通过MyBatis的环境配置信息构建会话工厂SqlSessionFactory。

（4）创建会话对象。由会话工厂创建SqlSession对象，该对象中包含了执行SQL语句的所有方法。

（5）Executor执行器。MyBatis底层定义了一个Executor接口来操作数据库，它将根据SqlSession传递的参数动态地生成需要执行的SQL语句，同时负责查询缓存的维护。

（6）MappedStatement对象。在Executor接口的执行方法中有一个MappedStatement类型的参数，该参数是对映射信息的封装，用于存储要映射的SQL语句的id、参数等信息。

（7）输入参数映射。输入参数类型可以是Map、List等集合类型，也可以是基本数据类型和POJO类型。输入参数映射过程类似于JDBC对preparedStatement对象设置参数的过程。

（8）输出结果映射。输出结果类型可以是Map、List等集合类型，也可以是基本数据类型和POJO类型。输出结果映射过程类似于JDBC对结果集的解析过程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-mybatis使用" tabindex="-1"><a class="header-anchor" href="#_4-mybatis使用" aria-hidden="true">#</a> 4.Mybatis使用</h2><h3 id="_4-1-构建sqlsessionfactory" tabindex="-1"><a class="header-anchor" href="#_4-1-构建sqlsessionfactory" aria-hidden="true">#</a> 4.1 构建SqlSessionFactory</h3><p>每个基于 MyBatis 的应用都是以一个 SqlSessionFactory 的实例为核心的。SqlSessionFactory 的实例可以通过 SqlSessionFactoryBuilder 获得。而 SqlSessionFactoryBuilder 则可以从 XML 配置文件或一个预先配置的 Configuration 实例来构建出 SqlSessionFactory 实例。</p><p><code>mybatis-config.xml</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>
        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
        <span class="token string">&quot;https://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>development<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POOLED<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://127.0.0.1:3306/mybatis_study<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--引入映射文件--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mappers/SysUserMapper.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),v={href:"http://www.mybatis.cn/mybatis/32.html",target:"_blank",rel:"noopener noreferrer"},b=a(`<h3 id="_4-2-获取-sqlsession" tabindex="-1"><a class="header-anchor" href="#_4-2-获取-sqlsession" aria-hidden="true">#</a> 4.2 获取 SqlSession</h3><p>SqlSession 提供了在数据库执行 SQL 命令所需的所有方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">SqlSession</span> session <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Blog</span> blog <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Blog</span><span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token string">&quot;org.mybatis.example.BlogMapper.selectBlog&quot;</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">SqlSession</span> session <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">BlogMapper</span> mapper <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">BlogMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Blog</span> blog <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectBlog</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(h,q){const t=l("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("JDBC编程："),n("a",r,[s("http://www.mybatis.cn/archives/765.html"),e(t)])])]),d,n("blockquote",null,[n("p",null,[s("mybatis原理："),n("a",k,[s("http://www.mybatis.cn/archives/706.html"),e(t)])])]),m,n("blockquote",null,[n("p",null,[s("mybatis配置文件详解："),n("a",v,[s("http://www.mybatis.cn/mybatis/32.html"),e(t)])])]),b])}const S=p(i,[["render",g],["__file","mybatis.html.vue"]]);export{S as default};
