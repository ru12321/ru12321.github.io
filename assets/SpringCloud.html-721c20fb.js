const e=JSON.parse('{"key":"v-6daa6234","path":"/tech/spring_framework/SpringCloud.html","title":"springcloud","lang":"zh-CN","frontmatter":{"title":"springcloud","date":"2023-03-27T00:00:00.000Z","category":"java","description":"什么是微服务 官网: https://www.martinfowler.com/articles/microservices.html In short, the microservice architectural(架构) style is an approach to developing a single application as a suite(系列) of small services, each running in its own process(进程) and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business(业务) capabilities(单元) and independently(独立) deployable(部署) by fully automated deployment machinery. There is a bare(基于) minimum of centralized(集中) management(管理) of these services, which may be written in different programming languages and use different data storage technologies. -----[摘自官网]","head":[["meta",{"property":"og:url","content":"http://gotuyi.top/tech/spring_framework/SpringCloud.html"}],["meta",{"property":"og:site_name","content":"Mr.Ru"}],["meta",{"property":"og:title","content":"springcloud"}],["meta",{"property":"og:description","content":"什么是微服务 官网: https://www.martinfowler.com/articles/microservices.html In short, the microservice architectural(架构) style is an approach to developing a single application as a suite(系列) of small services, each running in its own process(进程) and communicating with lightweight mechanisms, often an HTTP resource API. These services are built around business(业务) capabilities(单元) and independently(独立) deployable(部署) by fully automated deployment machinery. There is a bare(基于) minimum of centralized(集中) management(管理) of these services, which may be written in different programming languages and use different data storage technologies. -----[摘自官网]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-17T03:03:48.000Z"}],["meta",{"property":"article:published_time","content":"2023-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-17T03:03:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"springcloud\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-17T03:03:48.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是微服务","slug":"什么是微服务","link":"#什么是微服务","children":[]},{"level":2,"title":"为什么是微服务?","slug":"为什么是微服务","link":"#为什么是微服务","children":[{"level":3,"title":"单体应用","slug":"单体应用","link":"#单体应用","children":[]},{"level":3,"title":"微服务架构应用","slug":"微服务架构应用","link":"#微服务架构应用","children":[]},{"level":3,"title":"架构的演变","slug":"架构的演变","link":"#架构的演变","children":[]}]},{"level":2,"title":"微服务的解决方案","slug":"微服务的解决方案","link":"#微服务的解决方案","children":[]},{"level":2,"title":"什么是SpringCloud","slug":"什么是springcloud","link":"#什么是springcloud","children":[{"level":3,"title":"官方定义","slug":"官方定义","link":"#官方定义","children":[]},{"level":3,"title":"核心架构及其组件","slug":"核心架构及其组件","link":"#核心架构及其组件","children":[]}]},{"level":2,"title":"注册中心","slug":"注册中心","link":"#注册中心","children":[]},{"level":2,"title":"pom.xml","slug":"pom-xml","link":"#pom-xml","children":[]},{"level":2,"title":"Eureka 注册中心","slug":"eureka-注册中心","link":"#eureka-注册中心","children":[{"level":3,"title":"用法-Server端","slug":"用法-server端","link":"#用法-server端","children":[]},{"level":3,"title":"用法-Client端","slug":"用法-client端","link":"#用法-client端","children":[]}]},{"level":2,"title":"Consul 注册中心","slug":"consul-注册中心","link":"#consul-注册中心","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"用法-Server端","slug":"用法-server端-1","link":"#用法-server端-1","children":[]},{"level":3,"title":"用法-Client端","slug":"用法-client端-1","link":"#用法-client端-1","children":[]}]},{"level":2,"title":"Ribbon 负载均衡","slug":"ribbon-负载均衡","link":"#ribbon-负载均衡","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"依赖","slug":"依赖-3","link":"#依赖-3","children":[]},{"level":3,"title":"配置","slug":"配置-3","link":"#配置-3","children":[]},{"level":3,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":3,"title":"负载均衡策略","slug":"负载均衡策略","link":"#负载均衡策略","children":[]}]},{"level":2,"title":"OpenFeign 服务调用","slug":"openfeign-服务调用","link":"#openfeign-服务调用","children":[{"level":3,"title":"概念","slug":"概念-2","link":"#概念-2","children":[]},{"level":3,"title":"配置","slug":"配置-4","link":"#配置-4","children":[]},{"level":3,"title":"注解","slug":"注解-3","link":"#注解-3","children":[]},{"level":3,"title":"用法","slug":"用法-1","link":"#用法-1","children":[]}]},{"level":2,"title":"Hystrix 服务熔断、服务降级","slug":"hystrix-服务熔断、服务降级","link":"#hystrix-服务熔断、服务降级","children":[{"level":3,"title":"概念","slug":"概念-3","link":"#概念-3","children":[]},{"level":3,"title":"服务雪崩-服务级联故障","slug":"服务雪崩-服务级联故障","link":"#服务雪崩-服务级联故障","children":[]},{"level":3,"title":"服务熔断-自我熔断","slug":"服务熔断-自我熔断","link":"#服务熔断-自我熔断","children":[]},{"level":3,"title":"服务降级","slug":"服务降级","link":"#服务降级","children":[]},{"level":3,"title":"异同点总结","slug":"异同点总结","link":"#异同点总结","children":[]}]},{"level":2,"title":"Gateway 服务网关","slug":"gateway-服务网关","link":"#gateway-服务网关","children":[{"level":3,"title":"概念","slug":"概念-4","link":"#概念-4","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"用法","slug":"用法-3","link":"#用法-3","children":[]}]},{"level":2,"title":"Config 配置中心","slug":"config-配置中心","link":"#config-配置中心","children":[{"level":3,"title":"概念","slug":"概念-5","link":"#概念-5","children":[]},{"level":3,"title":"作用","slug":"作用-1","link":"#作用-1","children":[]},{"level":3,"title":"git仓库","slug":"git仓库","link":"#git仓库","children":[]},{"level":3,"title":"用法-Server端","slug":"用法-server端-2","link":"#用法-server端-2","children":[]},{"level":3,"title":"用法-Client端","slug":"用法-client端-2","link":"#用法-client端-2","children":[]},{"level":3,"title":"手动配置刷新","slug":"手动配置刷新","link":"#手动配置刷新","children":[]}]},{"level":2,"title":"Bus 消息总线","slug":"bus-消息总线","link":"#bus-消息总线","children":[{"level":3,"title":"概念","slug":"概念-6","link":"#概念-6","children":[]},{"level":3,"title":"动态配置刷新","slug":"动态配置刷新","link":"#动态配置刷新","children":[]},{"level":3,"title":"安装rabbitmq","slug":"安装rabbitmq","link":"#安装rabbitmq","children":[]},{"level":3,"title":"用法","slug":"用法-5","link":"#用法-5","children":[]}]}],"git":{"createdTime":1705460628000,"updatedTime":1705460628000,"contributors":[{"name":"ruyb","email":"ruyb@glodon.com","commits":1}]},"readingTime":{"minutes":33.98,"words":10193},"filePathRelative":"tech/spring_framework/SpringCloud.md","localizedDate":"2023年3月27日","excerpt":"<h2> 什么是微服务</h2>\\n<ul>\\n<li>官网: <a href=\\"https://www.martinfowler.com/articles/microservices.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.martinfowler.com/articles/microservices.html</a></li>\\n</ul>\\n<p>In short, the microservice architectural(架构) style is an approach to developing a single application as <code>a suite(系列) of small services</code>, each <code>running in its own process(进程)</code> and communicating with lightweight mechanisms, often an HTTP resource API. These services are <code>built around business(业务) capabilities(单元)</code> and <code>independently(独立) deployable(部署)</code> by fully automated deployment machinery. <code>There is a bare(基于) minimum of centralized(集中) management(管理) of these services</code>, which may be written in different programming languages and use different data storage technologies.                        -----[摘自官网]</p>","copyright":{},"autoDesc":true}');export{e as data};
