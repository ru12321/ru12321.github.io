import{_ as e,W as a,X as r,a0 as d}from"./framework-715d567f.js";const h={},o=d('<h1 id="一、zookeeper" tabindex="-1"><a class="header-anchor" href="#一、zookeeper" aria-hidden="true">#</a> 一、zookeeper</h1><h2 id="_1-1-概述" tabindex="-1"><a class="header-anchor" href="#_1-1-概述" aria-hidden="true">#</a> 1.1 概述</h2><p>Zookeeper是一个为分布式框架提供协调服务的Apache项目。协调就是铲屎官~~</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305240926955.png" alt="image-20230524092633863" loading="lazy"></p><h2 id="_1-2-特点" tabindex="-1"><a class="header-anchor" href="#_1-2-特点" aria-hidden="true">#</a> 1.2 特点</h2><p>​ Zookeeper从设计模式角度来理解：是一个基于观察者模式设计的分布式服务管理框架，它负责<code>存储和管大家都关心的数据</code>，然后接受<code>观察者的注册</code>，一旦这些<code>数据的状态发生变化</code>，Zookeeper就将负责通知已经在Zookeeper上注册的那些观察者做出相应的反应</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305240935489.png" alt="image-20230524093503441" loading="lazy"></p><hr><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305240948123.png" alt="image-20230524094824060" loading="lazy"></p><h2 id="_1-3-应用场景" tabindex="-1"><a class="header-anchor" href="#_1-3-应用场景" aria-hidden="true">#</a> 1.3 应用场景</h2><h2 id="_1-4-安装" tabindex="-1"><a class="header-anchor" href="#_1-4-安装" aria-hidden="true">#</a> 1.4 安装</h2><h2 id="_1-5-启动" tabindex="-1"><a class="header-anchor" href="#_1-5-启动" aria-hidden="true">#</a> 1.5 启动</h2><h2 id="_1-6-配置文件" tabindex="-1"><a class="header-anchor" href="#_1-6-配置文件" aria-hidden="true">#</a> 1.6 配置文件</h2><h1 id="二、zookeeper使用" tabindex="-1"><a class="header-anchor" href="#二、zookeeper使用" aria-hidden="true">#</a> 二、zookeeper使用</h1><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>',15),i=[o];function c(n,t){return a(),r("div",null,i)}const p=e(h,[["render",c],["__file","zookeeper.html.vue"]]);export{p as default};
