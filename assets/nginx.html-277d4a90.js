import{_ as l,W as t,X as p,Y as n,Z as s,$ as e,a0 as i,C as o}from"./framework-715d567f.js";const c={},r=i('<h1 id="收获" tabindex="-1"><a class="header-anchor" href="#收获" aria-hidden="true">#</a> 收获</h1><p>0.文件颜色</p><ul><li>蓝色是目录</li><li>绿色是可执行文件</li><li>红色是压缩文件</li></ul><p>1.<code>init 0</code> 关机</p><p>2.<code>tar zxvf xxx.tar.gz</code>解压压缩包</p><p>3.<code>yum intall -y xxx</code> centos安装包 -y默认就是选了提示的yes</p><p>4.防火墙</p><ul><li>关闭防火墙 <code>systemctl stop firewalld.service</code></li><li>禁止防火墙开机启动 <code>systemctl disable firewalld.service</code></li><li>放行端口 <code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></li><li>重启防火墙 <code>firewall-cmd --reload</code></li></ul><p>5.<code>ps -ef | grep nginx</code> 过滤出nginx进程</p><p>6.linux一般安装应用到<code>/usr/local</code></p><p>7.<code>telnet ip 端口</code> 验证<strong>端口</strong>是否开通，必须加上端口号 eg: <code>telnet 192.168.10.101 80</code></p><p>8.服务器可以上网，配置静态ip后，使用Xshell连接使用更方便；使用xftp查看服务器目录层级，可以直接右键记事本打开编辑文件；</p><p>9.nginx.conf.default是默认的配置文件，搞坏了.conf可以使用默认的玩，<strong>编辑时一定注意<code>;</code>分号</strong></p><p>10.vmware开的虚拟机中的nginx，如果给内网其它人访问到</p>',14),d=n("li",null,[n("p",null,"vmware是nat网络模式下")],-1),u=n("li",null,[n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181512360.png",alt:"image-20230518151207302",loading:"lazy"})])],-1),m={href:"http://10.8.52.38:2201/%EF%BC%8C%E8%AF%B7%E6%B1%82%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%BD%AC%E5%8F%91%E5%88%B0192.168.10.101:80%E7%AB%AF%E5%8F%A3%E5%8E%BB",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>11.命令curl</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#返回请求内容</span>
<span class="token function">curl</span> http://192.168.10.102

<span class="token comment">#返回响应头信息，注意是大写的I </span>
<span class="token function">curl</span> <span class="token parameter variable">-I</span> http://192.168.10.102

<span class="token comment">#-e表示加上referer</span>
<span class="token function">curl</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;http://baidu.com&quot;</span> <span class="token parameter variable">-I</span> http://192.168.44.101/img/logo.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>12.date 查看机器时间</p><h1 id="一、nginx安装" tabindex="-1"><a class="header-anchor" href="#一、nginx安装" aria-hidden="true">#</a> 一、Nginx安装</h1><p>vmware中安装cenos7</p>`,5),b=n("p",null,"报错：VMware Workstation与Credential Guard不兼容。在禁用 Device/Credential Guard后，可以运行VMware Workstation",-1),k={href:"http://681314.com/A/EioXEKQ48e",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"_1-1-配置上网",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-配置上网","aria-hidden":"true"},"#"),s(" 1.1 配置上网")],-1),g=i(`<li><p>安装后配置网卡文件；重启网络；测试</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171426774.png" alt="image-20230517142615754" loading="lazy"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//进入网卡配置文件
<span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens33

//修改ONBOOT<span class="token operator">=</span>yes

//重启网络
systemctl restart network

//ping外网试试
<span class="token function">ping</span> qq.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),x=n("p",null,[s("此时的网卡是"),n("code",null,"dhcp方式分配ip地址"),s("，这种方式会在系统"),n("strong",null,"每次联网的时候分配一个ip"),s("给我们用，也就是说有可能系统下次启动的时候ip会变，这样非常不方便我们管理；")],-1),_=n("code",null,"192.168.10.128",-1),f={href:"http://xn--pingqq-6e8ix095b.com",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171425338.png",alt:"image-20230517142517272",loading:"lazy"})],-1),w=i('<h2 id="_1-2-配置静态ip" tabindex="-1"><a class="header-anchor" href="#_1-2-配置静态ip" aria-hidden="true">#</a> 1.2 配置静态ip</h2><ul><li>通常xxx.xxx.xxx.1是网关，但也不一定</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171435662.png" alt="image-20230517143503639" loading="lazy"></p><h2 id="_1-3-过程排错" tabindex="-1"><a class="header-anchor" href="#_1-3-过程排错" aria-hidden="true">#</a> 1.3 过程排错</h2><p>1.先<code>ping qq.com</code>，没有数据包返回，说明不能上网</p><p>2.再ping DNS如<code>ping 8.8.8.8 </code>，没有数据包返回，说明该机器没有上到互联网</p><p>3.再排查网关配置是否正确，去看vmware的网关是多少</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171445170.png" alt="image-20230517144525116" loading="lazy"></p><p>4.所以修改centos7的网关为.2即可</p><h2 id="_1-4-nginx版本" tabindex="-1"><a class="header-anchor" href="#_1-4-nginx版本" aria-hidden="true">#</a> 1.4 nginx版本</h2>',10),j={href:"http://nginx.org/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://www.nginx.com",target:"_blank",rel:"noopener noreferrer"},E={href:"http://openresty.org/cn/",target:"_blank",rel:"noopener noreferrer"},B={href:"http://tengine.taobao.org/",target:"_blank",rel:"noopener noreferrer"},q=i(`<ul><li><p>下载开源版本nginx-1.21.6.tar.gz</p></li><li><p>xftp上传到服务器中，然后tar zxvf xxx解压</p></li><li><p>然后进入文件夹，直接编译安装</p><ul><li><p><code>./configure --prefix=/usr/local/nginx</code></p></li><li><p>报错则依次安装以下</p><ul><li><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> pcre pcre-devel
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib zlib-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>再依次编译执行</p><ul><li><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><h2 id="_1-5-启动nginx" tabindex="-1"><a class="header-anchor" href="#_1-5-启动nginx" aria-hidden="true">#</a> 1.5 启动nginx</h2><p>进入安装好的目录/usr/local/nginx/sbin</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./nginx 启动
./nginx <span class="token parameter variable">-s</span> stop 快速停止
./nginx <span class="token parameter variable">-s</span> quit 优雅关闭，在退出前完成已经接受的连接请求（把之前没完成的下载啊什么任务执行完）
./nginx <span class="token parameter variable">-s</span> reload 重新加载配置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>启动后，在宿主机访问服务器的nginx（本机ip即可），发现无法访问，需要关闭防火墙</p></li><li><p>关闭后再访问，显示正常</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171516644.png" alt="image-20230517151646600" loading="lazy"></p></li></ul><h3 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h3><p>关闭防火墙 <code>systemctl stop firewalld.service</code></p><p>禁止防火墙开机启动 <code>systemctl disable firewalld.service</code></p><p>放行端口 <code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></p><p>重启防火墙 <code>firewall-cmd --reload</code></p><h3 id="编写nginx启动脚本" tabindex="-1"><a class="header-anchor" href="#编写nginx启动脚本" aria-hidden="true">#</a> 编写nginx启动脚本</h3><p>创建服务脚本：将nginx启动命令作为服务器的一个服务，实现开机自己启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /usr/lib/systemd/system/nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务脚本内容</p><ul><li>注意下面的路径要和安装nginx的路径一样</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx - web server
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target remote-fs.target nss-lookup.target
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/usr/local/nginx/logs/nginx.pid
<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-t</span> <span class="token parameter variable">-c</span> /usr/local/nginx/conf/nginx.conf
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-c</span> /usr/local/nginx/conf/nginx.conf
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> stop
<span class="token assign-left variable">ExecQuit</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> quit
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载系统服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看服务状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开机自启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改完配置文件重新加载一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl reload nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="二、nginx使用" tabindex="-1"><a class="header-anchor" href="#二、nginx使用" aria-hidden="true">#</a> 二、Nginx使用</h1><h2 id="_2-1-目录" tabindex="-1"><a class="header-anchor" href="#_2-1-目录" aria-hidden="true">#</a> 2.1 目录</h2><p>conf目录</p><p><code>用来存放配置文件相关</code>，主要是<code>nginx.conf</code></p><p>html目录</p><p><code>用来存放静态文件的默认目录 html、css等，默认访问的就是index.html页面</code></p><p>logs目录</p><p><code>记录访问日志 access.log，日志文件大小可以配置；</code></p><p><code>nginx.pid记录nginx程序的pid为887</code></p><p>sbin目录</p><p><code>nginx的主程序</code></p><h2 id="_2-2-运行原理" tabindex="-1"><a class="header-anchor" href="#_2-2-运行原理" aria-hidden="true">#</a> 2.2 运行原理</h2><p>1.运行时分为主进程，加载和校验配置文件，协调子进程；</p><p>2.再forks启动子进程，去接收请求；读取到nginx.conf的站点配置，解析请求要访问的站点页面</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171545684.png" alt="image-20230517154517629" loading="lazy"></p><h2 id="_2-3-nginx-conf" tabindex="-1"><a class="header-anchor" href="#_2-3-nginx-conf" aria-hidden="true">#</a> 2.3 nginx.conf</h2><ul><li>编辑完配置后，重新加载一下<code>systemctl reload nginx</code></li></ul><p>去掉注释后的精简文件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">//默认为1，表示开启一个业务进程</span>
worker_processes  <span class="token number">1</span>;

events <span class="token punctuation">{</span>
    <span class="token comment">//单个业务进程可接受连接数</span>
    worker_connections  <span class="token number">1024</span>;
<span class="token punctuation">}</span>

http <span class="token punctuation">{</span>
    <span class="token comment">//引入http mime类型，存放的是各类文件类型、后缀，用于网络传输解析用</span>
    include       mime.types;
    
    <span class="token comment">//如果mime类型没匹配上，默认使用二进制流的方式传输</span>
    default_type  application/octet-stream;
    
    <span class="token comment">//使用linux的sendfile(socket, file, len) 高效网络传输，也就是数据0拷贝</span>
    sendfile        on;
   
    keepalive_timeout  <span class="token number">65</span>;
 
    <span class="token comment">//一个server代表一个主机，每个主机不干扰，这种方式叫虚拟主机vhost</span>
    server <span class="token punctuation">{</span>
        <span class="token comment">//当前主机的监听端口号</span>
        listen       <span class="token number">80</span>;

    	<span class="token comment">//当前主机的主机名或域名 http://glodon.com</span>
        server_name  localhost;
    
        <span class="token comment">// 一个url是http://glodon.com/xxoo/index.html</span>
    	<span class="token comment">//uri是/xxoo/index.html</span>
		<span class="token comment">//匹配路径，/代表uri，是资源的意思</span>
        location / <span class="token punctuation">{</span>
    		<span class="token comment">//匹配上uri后，进入文件根目录，这个html是相对目录，相对于/usr/local/nginx下的</span>
            root   html;
    		<span class="token comment">//默认页名称</span>
            index  index.html index.htm;
        <span class="token punctuation">}</span>

		<span class="token comment">//报错编码对应页面</span>
		error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html; 
		location = /50x.html <span class="token punctuation">{</span>
			root html;
		<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关于sendfiile" tabindex="-1"><a class="header-anchor" href="#关于sendfiile" aria-hidden="true">#</a> 关于sendFiile</h3><p>linxu内核直接复制文件的技术</p><p><strong>未使用：</strong></p><ul><li>nginx软件通过linux内核的网络接口接收请求，假如该请求要访问xxx.mp3文件</li><li>nginx会将该文件读取到自己的应用程序内存，再通过linux网络接口缓存发送出去</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171602325.png" alt="image-20230517160254270" loading="lazy"></p><p><strong>启用sendFile后</strong></p><ul><li>nginx对于文件请求，直接发送给linux内核一个信号</li><li>linux内核直接读取发送出去该文件</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305171605869.png" alt="image-20230517160521822" loading="lazy"></p><h2 id="_2-4-虚拟主机和域名解析" tabindex="-1"><a class="header-anchor" href="#_2-4-虚拟主机和域名解析" aria-hidden="true">#</a> 2.4 虚拟主机和域名解析</h2><p>这里的虚拟主机可以理解为nginx配置中的不同的server，每个server代表一个主机</p>`,55),N={href:"https://blog.csdn.net/weixin_41490593/article/details/94612784",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,[n("p",null,[s("当客户端发送一个请求后，通常是http协议，而"),n("code",null,"http1.1包含了host字段，即请求头带着域名的信息--默认url")])],-1),L=n("li",null,[n("p",null,[s("先通过DNS域名解析，得到ip，然后建立tcp连接，当服务器（以nginx为例）收到请求时，就会"),n("code",null,"解析http请求host字段"),s("来判断你是访问的"),n("code",null,"那个server配置"),s("下的代码。nginx配置多个server。这样就可以实现在一个服务器上通过http的host字段实现虚拟服务器")])],-1),U=n("li",null,[n("p",null,"虚拟主机（virtual hosting）即共享主机（shared web hosting），可以利用虚拟技术把一台完整的服务器分成若干个主机，因此可以在单一主机上运行多个网站或服务。")],-1),A={href:"https://www.google.com/",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"Host 请求头决定着访问哪个虚拟主机",-1),T=n("li",null,[n("p",null,[s("hosts文件配置 "),n("code",null,"ip ---> 域名"),s("的映射")])],-1),I=n("p",null,"阿里云域名解析",-1),S=n("ul",null,[n("li",null,"将实际购买的域名解析到具体的机器（虚拟机服务器也可以）上~")],-1),$=n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305180928260.png",alt:"image-20230518092813199",loading:"lazy"})],-1),C=n("ul",null,[n("li",null,"多用户/租户的二级用户，使用通配符 * 进行解析")],-1),D=n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305180931945.png",alt:"image-20230518093150889",loading:"lazy"})],-1),P=n("p",null,"域名解析实战",-1),V=n("ol",null,[n("li",null,"多用户的二级域名")],-1),H={href:"http://ruyb.glodon.com",target:"_blank",rel:"noopener noreferrer"},W=i(`<ol start="2"><li>短网址</li></ol><p>短网址DB用key-value形式存储<code>uuid:真实网址</code>，url拆分得到uuid，拿到真实网址去redirect</p><h2 id="_2-5-nginx虚拟主机配置" tabindex="-1"><a class="header-anchor" href="#_2-5-nginx虚拟主机配置" aria-hidden="true">#</a> 2.5 nginx虚拟主机配置</h2><p>1.配置<strong>不同的端口号</strong>进行测试，注意配置中的分号不能省略<code>;</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>   server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span>;
        server_name  localhost;

        location / <span class="token punctuation">{</span>
            root   /test01/www;
            index  index.html index.htm;
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html;
        location = /50x.html <span class="token punctuation">{</span>
            root   html;
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    server <span class="token punctuation">{</span>
        listen       <span class="token number">88</span>;
        server_name  localhost;

        location / <span class="token punctuation">{</span>
            root   /test01/vod;
            index  index.html index.htm;
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html;
        location = /50x.html <span class="token punctuation">{</span>
            root   html;
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.配置<strong>不同的server_name</strong>域名</p><p>宿主机的hosts文件配置了域名解析</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>192.168.10.101    r.com
192.168.10.101    r2.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>nginx.conf</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span>;
        server_name  r.com;

        location / <span class="token punctuation">{</span>
            root   /test01/www;
            index  index.html index.htm;
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html;
        location = /50x.html <span class="token punctuation">{</span>
            root   html;
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span>;
        server_name  r2.com;

        location / <span class="token punctuation">{</span>
            root   /test01/vod;
            index  index.html index.htm;
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html;
        location = /50x.html <span class="token punctuation">{</span>
            root   html;
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-6-server-name匹配规则" tabindex="-1"><a class="header-anchor" href="#_2-6-server-name匹配规则" aria-hidden="true">#</a> 2.6 server_name匹配规则</h2><ul><li><p><mark>重要</mark>：如果域名解析后打到服务器上了（即<strong>匹配到了nginx所监听的server端口</strong>），但是该请求带的域名<strong>匹配不上</strong>任何一个server_name，那么<strong>nginx默认就会返回该server端口下的第一个（按照书写的先后顺序）location对应的页面</strong></p></li><li><p><strong>所有请求都是从上到下匹配server，匹配到就不往下走了</strong></p></li><li><p><strong>在一个server中的同一servername中可以配置多个域名</strong></p></li></ul><hr><p>完整匹配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server_name vod<span class="token punctuation">.</span>mmban<span class="token punctuation">.</span>com www1<span class="token punctuation">.</span>mmban<span class="token punctuation">.</span>com<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通配符匹配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server_name <span class="token operator">*</span><span class="token punctuation">.</span>mmban<span class="token punctuation">.</span>com<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通配符结束匹配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server_name vod<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>正则匹配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server_name <span class="token operator">~</span><span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\\<span class="token punctuation">.</span>mmban\\<span class="token punctuation">.</span>com$<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例</p>`,22),X={href:"http://xn--www-0h9di15grge85do97dz44albdv5s.r.com",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,".r.com",-1),O=i(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span><span class="token punctuation">;</span>
        server_name  www<span class="token punctuation">.</span>r<span class="token punctuation">.</span>com<span class="token punctuation">;</span>

        location <span class="token operator">/</span> <span class="token punctuation">{</span>
            root   <span class="token operator">/</span>test01<span class="token operator">/</span>www<span class="token punctuation">;</span>
            index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span><span class="token punctuation">;</span>
        server_name  <span class="token operator">*</span><span class="token punctuation">.</span>r<span class="token punctuation">.</span>com<span class="token punctuation">;</span>

        location <span class="token operator">/</span> <span class="token punctuation">{</span>
            root   <span class="token operator">/</span>test01<span class="token operator">/</span>vod<span class="token punctuation">;</span>
            index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-7-反向代理" tabindex="-1"><a class="header-anchor" href="#_2-7-反向代理" aria-hidden="true">#</a> 2.7 反向代理</h2>`,2),G={href:"https://zhuanlan.zhihu.com/p/464965616",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,[s("为什么有这东西，不能直接访问吗？利用反向代理可以作为内部 "),n("strong",null,"负载均衡(load balance)"),s(" 的手段")],-1),K=i(`<ol><li>网关、代理与反向代理</li></ol><p>网关：转发数据包，访问网络的入口</p><p>代理：即正向代理，是指用户主动配置代理服务器，用户和代理服务器是整体；是客户端视角</p><p>反向代理：代理服务器和后台应用服务器是整体；是服务端视角</p><p><code>正反代理都是一个数据传输中转站，代理服务器可以理解为一个网关</code></p><ol start="2"><li>反向代理在系统架构中的应用场景 <ul><li>传统公司系统架构，nginx做反向代理</li></ul></li></ol><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181358696.png" alt="image-20230518135818640" loading="lazy"></p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181358393.png" alt="image-20230518135836335" loading="lazy"></p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181359588.png" alt="image-20230518135905537" loading="lazy"></p><ul><li><p>中小型互联网，nginx可以改变请求的url，<code>url拼接形式可以转为100.html</code></p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181403047.png" alt="image-20230518140356977" loading="lazy"></p></li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181407869.png" alt="image-20230518140751802" loading="lazy"></p><ol start="3"><li>Nginx的反向代理配置</li></ol><p><code>proxy_pass</code>让http请求直接302</p><ul><li><p>不支持https的proxy_pass，会直接配置文件报错</p></li><li><p>location是/，说明访问站点的根目录会进来，把请求转发到<code>http://www.baidu.com </code>这个地址</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span><span class="token punctuation">;</span>
        server_name localhost<span class="token punctuation">;</span>

        location <span class="token operator">/</span> <span class="token punctuation">{</span>
            proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com	
            #root   html<span class="token punctuation">;</span>
            #index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  <span class="token operator">/</span>50x<span class="token punctuation">.</span>html<span class="token punctuation">;</span>
        location <span class="token operator">=</span> <span class="token operator">/</span>50x<span class="token punctuation">.</span>html <span class="token punctuation">{</span>
            root   html<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>基于反向代理的负载均衡器</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">//名称要和第12行后面的一样 </span>
  upstream httpru <span class="token punctuation">{</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.102</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.103</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

    server <span class="token punctuation">{</span>
        listen       <span class="token number">80</span><span class="token punctuation">;</span>
        server_name localhost<span class="token punctuation">;</span>

        location <span class="token operator">/</span> <span class="token punctuation">{</span>
            proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>httpru<span class="token punctuation">;</span>	
            #root   html<span class="token punctuation">;</span>
            #index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  <span class="token operator">/</span>50x<span class="token punctuation">.</span>html<span class="token punctuation">;</span>
        location <span class="token operator">=</span> <span class="token operator">/</span>50x<span class="token punctuation">.</span>html <span class="token punctuation">{</span>
            root   html<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-8-负载均衡" tabindex="-1"><a class="header-anchor" href="#_2-8-负载均衡" aria-hidden="true">#</a> 2.8 负载均衡</h2><p><strong>轮询</strong>（使用多，但不能维持会话）</p><ul><li><p>逐一转发，这种方式适用于无状态请求</p></li><li><p>不能保存session信息，本次会话在机器A上，下次请求不一定到机器B了，拿不到会话信息</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  upstream httpru <span class="token punctuation">{</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.102</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.103</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>权重</strong>（不能维持会话）</p><ul><li><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况</p></li><li><p>weight默认为1</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>   upstream httpru <span class="token punctuation">{</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.102</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.103</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.104</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">//down代表下线了，只能访问到3和4</span>
   <span class="token comment">//backup代表只有3挂了，才能访问到备用机4</span>
   upstream httpru <span class="token punctuation">{</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.102</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">8</span> down<span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.103</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
       server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.104</span><span class="token operator">:</span><span class="token number">80</span> weight<span class="token operator">=</span><span class="token number">1</span> backup<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ip_hash</p><ul><li><p>根据客户端的ip地址转发同一台服务器，可以保持会话</p></li><li><p>但是ip也可以变化，当信号不好时/手机切换基站时，ip发生变化，会话无法保持了</p></li></ul><p>url_hash（适用固定资源，这些资源都不在同一服务器）</p><ul><li>根据用户访问的url定向流量转发请求</li></ul><p>least_conn</p><ul><li>最少连接访问</li></ul><p>fair</p><ul><li>根据后端服务器响应时间转发请求</li></ul><hr><p>企业更多的是<code>轮询方式 + token方式</code>做负载均衡和维持会话（身份验证）</p>`,34),Y=n("p",null,"token",-1),Z={href:"https://cloud.tencent.com/developer/article/2062159",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.jianshu.com/p/3b5e7293bf95",target:"_blank",rel:"noopener noreferrer"},nn=i(`<h2 id="_2-9-动静分离" tabindex="-1"><a class="header-anchor" href="#_2-9-动静分离" aria-hidden="true">#</a> 2.9 动静分离</h2><p>将静态资源前置到nginx服务器上，减轻了应用服务器的压力，提高并发；而且即使动态服务不可用，但静态资源不会受到影响</p><p>配置反向代理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">/</span> <span class="token punctuation">{</span>
    proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span>
    root html<span class="token punctuation">;</span>
    index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>同一个server下增加location</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">/</span>css <span class="token punctuation">{</span>
    root html<span class="token punctuation">;</span>
    index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
location <span class="token operator">/</span>images <span class="token punctuation">{</span>
    root html<span class="token punctuation">;</span>
    index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
location <span class="token operator">/</span>js <span class="token punctuation">{</span>
    root html<span class="token punctuation">;</span>
    index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-10-location匹配" tabindex="-1"><a class="header-anchor" href="#_2-10-location匹配" aria-hidden="true">#</a> 2.10 location匹配</h2><p>location 前缀</p><p><code>/</code> 通用匹配，任何请求都会匹配到</p><p><code>= </code>精准匹配，不是以指定模式开头</p><p><code>~ </code>正则匹配，区分大小写</p><p><code>~*</code> 正则匹配，不区分大小写</p><p><code>^~</code></p><hr><p>举例正则匹配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">~</span><span class="token operator">*</span><span class="token operator">/</span><span class="token punctuation">(</span>css<span class="token operator">|</span>img<span class="token operator">|</span>js<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		root <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">static</span><span class="token punctuation">;</span>
		index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>location匹配顺序</p><ul><li><p>普通（非正则）location会一直往下，直到找到<mark>匹配度最高</mark>的（最大前缀匹配）</p></li><li><p>多个正则location直接按书写顺序匹配，成功后就不会继续往后面匹配</p></li><li><p>当普通location与正则location同时存在，如果正则匹配成功,则不会再执行普通匹配</p></li><li><p><mark>所有类型location存在时，“=”匹配 &gt; “^~”匹配 &gt; 正则匹配 &gt; 普通（最大前缀匹配）</mark></p></li></ul><h2 id="_2-11-url-rewrite" tabindex="-1"><a class="header-anchor" href="#_2-11-url-rewrite" aria-hidden="true">#</a> 2.11 URL rewrite</h2><p>将含参数的那些URL地址，隐藏一下，应用场景有</p>`,20),sn={href:"http://xn--www-p18dohn1qxmf3a288f0uj57an88eez9byp7a.baidu.com",target:"_blank",rel:"noopener noreferrer"},an=n("li",null,"协议跳转，用户通过http协议请求网站时，将其重新跳转至https协议方式。",-1),en=n("li",null,[n("strong",null,"伪静态"),s("，将动态页面显示为静态页面方式的一种技术，便于搜索引擎的录入，同时建上动态URL地址对外暴露过多的参数，提升更高的安全性。")],-1),ln=n("li",null,[n("strong",null,"搜索引擎"),s("，SEO优化依赖于url路径，好记的url便于搜索引擎录入")],-1),tn=i(`<hr><ul><li>静态的写法：以^开头，$结尾，将uri<code>/2.html</code>重转到<code>/index.jsp?pageNum=2</code></li><li>break不会改变原有的url<code>www.xxxx.com/2.html</code>；redirect会改变原有的url<code>www.xxxx.com/index.jsp?pageNum=2</code></li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181650286.png" alt="image-20230518165058225" loading="lazy"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rewrite是实现URL重写的关键指令，根据regex <span class="token punctuation">(</span>正则表达式<span class="token punctuation">)</span>部分内容，重定向到replacement，结尾是flag标记。

rewrite <span class="token operator">&lt;</span>regex<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>replacement<span class="token operator">&gt;</span> <span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">;</span>
 关键字   正则       替代内容    flag标记

关键字：其中关键字error_log不能改变

正则：perl兼容正则表达式语句进行规则匹配

替代内容：将正则匹配的内容替换成replacement

flag标记：rewrite支持的flag标记
	rewrite参数的标签段位置：
	server,location,if
	flag标记说明：
		last <span class="token comment">#本条规则匹配完成后，继续向下匹配新的location URI规则</span>
		<span class="token builtin class-name">break</span> <span class="token comment">#本条规则匹配完成即终止，不再匹配后面的任何规则</span>
		redirect <span class="token comment">#返回302临时重定向，浏览器地址会显示跳转后的URL地址</span>
		permanent <span class="token comment">#返回301永久重定向，浏览器地址栏会显示跳转后的URL地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>正则写法：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//()括起来正则，代表是第一个参数</span>
<span class="token comment">//$1 代表 拿到正则的第一个值</span>
rewrite <span class="token operator">^</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">.</span>html$ <span class="token operator">/</span>index<span class="token punctuation">.</span>jsp<span class="token operator">?</span>pageNum<span class="token operator">=</span>$1 <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-12-网关服务器" tabindex="-1"><a class="header-anchor" href="#_2-12-网关服务器" aria-hidden="true">#</a> 2.12 网关服务器</h2><p><strong>nginx更准确的叫法是网关服务器，包含反向代理、负载均衡、动静分离、URL WRITEd等功能</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>upstream httpds <span class="token punctuation">{</span>
    server <span class="token number">192.168</span><span class="token number">.44</span><span class="token number">.102</span> weight<span class="token operator">=</span><span class="token number">8</span> down<span class="token punctuation">;</span>
    server <span class="token number">192.168</span><span class="token number">.44</span><span class="token number">.103</span><span class="token operator">:</span><span class="token number">8080</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
    server <span class="token number">192.168</span><span class="token number">.44</span><span class="token number">.104</span><span class="token operator">:</span><span class="token number">8080</span> weight<span class="token operator">=</span><span class="token number">1</span> backup<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
location <span class="token operator">/</span> <span class="token punctuation">{</span>
    rewrite <span class="token operator">^</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">.</span>html$ <span class="token operator">/</span>index<span class="token punctuation">.</span>jsp<span class="token operator">?</span>pageNum<span class="token operator">=</span>$1 redirect<span class="token punctuation">;</span>
    proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>httpds <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-13-防盗链" tabindex="-1"><a class="header-anchor" href="#_2-13-防盗链" aria-hidden="true">#</a> 2.13 防盗链</h2><p>网页的加载顺序是先加载HTML相关的内容，然后解析HTML的内容，那些需要加载图片，那些需要加载文件，是逐步加载的。</p><p>背景：当发起一个请求xxx.html文件时，xxx.html文件引用到了zz.img，这时会再发请求去拿到zz.img，此时的请求头<code>Header</code>上就会带着<code>Referer</code>字段。通俗理解就是referer<strong>代表你从哪个url跳转过来的</strong></p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305181718284.png" alt="image-20230518171852214" loading="lazy"></p><p>这样就可以做防盗链配置，即不想让别人（爬虫）等使用你的静态资源，即<strong>指定从www.xxx.com跳转过来才可以访问静态资源</strong>；</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">~</span><span class="token operator">*</span><span class="token operator">/</span><span class="token punctuation">(</span>css<span class="token operator">|</span>img<span class="token operator">|</span>js<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//指定请求必须从192.168.44.101跳转过来才可以往下执行</span>
	valid_referers <span class="token number">192.168</span><span class="token number">.44</span><span class="token number">.101</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>$invalid_referer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
        <span class="token comment">//可以直接返回图片</span>
        rewrite <span class="token operator">^</span><span class="token operator">/</span>  <span class="token operator">/</span>img<span class="token operator">/</span>x<span class="token punctuation">.</span>png  <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token comment">//也可以返回状态码</span>
    	<span class="token comment">// return 403;</span>
	<span class="token punctuation">}</span>
	root <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">static</span><span class="token punctuation">;</span>
	index index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>valid_referers none <span class="token operator">|</span> blocked <span class="token operator">|</span> server_names <span class="token operator">|</span> strings <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>none， 检测 Referer 头域不存在的情况，没有referer也可以访问；但带错了referer就不行</li><li>blocked，检测 Referer 头域的值被防火墙或者代理服务器删除或伪装的情况。这种情况该头域的值不以 “http://” 或 “https://” 开头</li><li>server_names ，设置一个或多个 URL ，检测 Referer 头域的值是否是这些 URL 中的某一个</li></ul><h2 id="_2-14-高可用配置" tabindex="-1"><a class="header-anchor" href="#_2-14-高可用配置" aria-hidden="true">#</a> 2.14 高可用配置</h2><p>为什么要有高可用？因为nginx万一挂掉了呢...</p><ul><li>keepalived是一个小软件，运行在nginx上，可以检测nginx之间有没有挂掉</li><li>对外暴露出一个虚拟ip即可</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305190951045.png" alt="image-20230519095138951" loading="lazy"></p><ul><li>安装keepalived</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> keepalived
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>修改配置，删除多余配置</p><ul><li>第一台机器</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305191000417.png" alt="image-20230519100021352" loading="lazy"></p><ul><li><p>第二台机器，优先级可以调低一点</p><p>注意instance、virual_router_id、auth要对得上第一台机器</p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305191002842.png" alt="image-20230519100225774" loading="lazy"></p></li></ul></li><li><p>启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start keepalived
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>测试</p><p>第一台机器使用ip addr可以看到有<code>ip200</code>，宿主机使用<code>ping 192.168.44.200</code>，可以ping通，但是第一台机器挂掉后（即这台机器的keepalived进程挂了），ping 命令会超时一次，但很快第二台机器上有了ip200，请求又恢复了正常。这里看起来就是<strong>ip200实现了漂移</strong></p></li><li><p>以后访问统一出口<code>ip200</code>即可</p></li></ul><h2 id="_2-15-https证书配置" tabindex="-1"><a class="header-anchor" href="#_2-15-https证书配置" aria-hidden="true">#</a> 2.15 https证书配置</h2>`,25),pn=n("p",null,"如何通俗易懂的给你讲明白HTTPS？傻子都能看懂~ 墙裂推荐看多次",-1),on={href:"https://juejin.cn/post/6955767063524671524",target:"_blank",rel:"noopener noreferrer"},cn=n("ul",null,[n("li",null,"第一次请求先下载公钥"),n("li",null,"整个过程私钥是保证绝对安全的"),n("li",null,"公钥加密的公钥是解不开的")],-1),rn=n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305191048951.png",alt:"image-20230519104849875",loading:"lazy"})],-1),dn=n("hr",null,null,-1),un=n("p",null,"但这个过程还是存在问题：",-1),mn=n("ul",null,[n("li",null,"第一次下载公钥时可能被拦截，返回了一个假公钥，然后之后的请求都是用假公钥，有对应的假私钥进行解密，数据就不安全了")],-1),vn=n("hr",null,null,-1),bn=n("p",null,"P43---P50实战讲解买域名、买服务器、配置证书",-1),kn={href:"https://oneinstack.com/",target:"_blank",rel:"noopener noreferrer"},hn=n("li",null,[n("p",null,"在Nginx上配置证书")],-1),gn=n("p",null,[n("img",{src:"https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305191616563.png",alt:"image-20230519161638489",loading:"lazy"})],-1);function xn(_n,fn){const a=o("ExternalLinkIcon");return t(),p("div",null,[r,n("ul",null,[d,u,n("li",null,[n("p",null,[s("访问"),n("a",m,[s("http://10.8.52.38:2201/，请求就可以转发到192.168.10.101:80端口去"),e(a)])])])]),v,n("blockquote",null,[b,n("p",null,[s("解决："),n("a",k,[s("http://681314.com/A/EioXEKQ48e"),e(a)]),s(" 注意解决后影响了wsl的使用")])]),h,n("ul",null,[g,n("li",null,[x,n("p",null,[s("此时的ip是"),_,s("，能访问外网（"),n("a",f,[s("ping通了qq.com"),e(a)]),s("），所以可以使用Xshell连接这个ip")]),y])]),w,n("p",null,[s("Nginx开源版 "),n("a",j,[s("http://nginx.org/"),e(a)]),s(" 很干净的版本 Nginx plus 商业版 "),n("a",z,[s("https://www.nginx.com"),e(a)]),s(" 商业版，全家桶 openresty "),n("a",E,[s("http://openresty.org/cn/"),e(a)]),s(" lua脚本扩展，免费， Tengine "),n("a",B,[s("http://tengine.taobao.org/"),e(a)]),s(" c语言扩展，免费，淘宝网发起")]),q,n("p",null,[s("参考文档："),n("a",N,[s("https://blog.csdn.net/weixin_41490593/article/details/94612784"),e(a)])]),n("ul",null,[R,L,U,n("li",null,[n("p",null,[s("举个栗子，有一台 ip 地址为 61.135.169.125 的服务器，在这台服务器上部署着谷歌、百度、淘宝的网站。为什么我们访问 "),n("a",A,[s("https://www.google.com"),e(a)]),s(" 时，看到的是 Google 的首页而不是百度或者淘宝的首页？原因就是 "),F])]),T]),I,S,$,C,D,P,V,n("p",null,[s("nginx拿到完整的url（"),n("a",H,[s("ruyb.glodon.com"),e(a)]),s("），拆分得到二级域名的值（ruyb），nginx反向代理去数据库查到ruyb的个人信息，再转给nginx，nginx再返回给页面")]),W,n("ul",null,[n("li",null,[n("a",X,[s("这样配置是指除了www.r.com"),e(a)]),s("，其它的以"),M,s("结尾的请求都打到下面的server上")])]),O,n("blockquote",null,[n("p",null,[s("好文推荐，讲代理的 "),n("a",G,[s("https://zhuanlan.zhihu.com/p/464965616"),e(a)])]),Q]),K,n("blockquote",null,[Y,n("p",null,[n("a",Z,[s("https://cloud.tencent.com/developer/article/2062159"),e(a)])]),n("p",null,[n("a",J,[s("https://www.jianshu.com/p/3b5e7293bf95"),e(a)])])]),nn,n("ul",null,[n("li",null,[s("地址跳转，用户访问www.linux.com这个URL是，"),n("a",sn,[s("将其定向至一个新的域名www.baidu.com"),e(a)]),s("。")]),an,en,ln]),tn,n("blockquote",null,[pn,n("p",null,[n("a",on,[s("https://juejin.cn/post/6955767063524671524"),e(a)])])]),cn,rn,dn,un,mn,vn,bn,n("ul",null,[n("li",null,[n("p",null,[s("网站"),n("a",kn,[s("https://oneinstack.com/"),e(a)]),s(" 在Linux上组合安装软件")])]),hn]),gn])}const wn=l(c,[["render",xn],["__file","nginx.html.vue"]]);export{wn as default};
