import{_ as e,W as o,X as c,Y as n,Z as s,$ as t,a0 as p,C as i}from"./framework-715d567f.js";const l={},u=p('<h1 id="_4月-填报组件" tabindex="-1"><a class="header-anchor" href="#_4月-填报组件" aria-hidden="true">#</a> 4月 填报组件</h1><h2 id="_1-数据库表、领域模型及时同步" tabindex="-1"><a class="header-anchor" href="#_1-数据库表、领域模型及时同步" aria-hidden="true">#</a> 1.数据库表、领域模型及时同步</h2><p>开发过程中，涉及到的<code>数据库表修改</code>应该及时记录在项目的migration下，跟随PR一起上传到项目；同样，涉及到的<code>领域模型字段</code>也要及时同步修改相应文件</p><h2 id="_2-mp框架的updatetime未更新" tabindex="-1"><a class="header-anchor" href="#_2-mp框架的updatetime未更新" aria-hidden="true">#</a> 2.mp框架的updateTime未更新</h2><p>存在问题：</p><ul><li><p>第一次新增一条A记录，mp框架会给实体类的updateTime字段因为为空，所以进行赋值</p></li><li><p>第二次编辑时，因为前端传来的DTO中含有updateTime字段，即该字段有值，所以框架不会自动进行最新时间的更新</p></li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305111550070.png" alt="image-20230511155047034" loading="lazy"></p><p>解决方式：</p><ul><li>因为mp框架使用updateById更新时，参数为entity，所以在各业务类统一DTO转Entity时，手动更新updateTime字段为最新时间</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305111555208.png" alt="image-20230511155540173" loading="lazy"></p>',10),r={href:"https://geek.glodon.com/projects/ESTATE-FIELD-PRODUCT/repos/estate-field-fill-server/pull-requests/140/overview",target:"_blank",rel:"noopener noreferrer"},k=n("h1",{id:"_5月-远洋-填报",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5月-远洋-填报","aria-hidden":"true"},"#"),s(" 5月 远洋 + 填报")],-1),d=n("h2",{id:"_1-操作bigdecimal时-多用成本封装的工具类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-操作bigdecimal时-多用成本封装的工具类","aria-hidden":"true"},"#"),s(" 1.操作BigDecimal时 多用成本封装的工具类")],-1),m={href:"https://geek.glodon.com/projects/JSF-COST/repos/gatling-yuanyang-server/pull-requests/794/overview",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>加减乘除--<code>NumberUtil</code></p><p>Object转BigDecimal--<code>BigDecimalUtils</code></p><h2 id="_2-lambda中使用局部变量报错" tabindex="-1"><a class="header-anchor" href="#_2-lambda中使用局部变量报错" aria-hidden="true">#</a> 2.lambda中使用局部变量报错</h2><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305081533679.png" alt="image-20230508153358581" loading="lazy"></p><ul><li><p>编译报错：<code>Variable used in lambda expression should be final or effectively final</code></p></li><li><p>143行并没有加上final修饰却也可以正常编译</p></li></ul><hr><p>原因：</p><p>jdk8以前，匿名类中如果要访问局部变量的话，那个局部变量必须<code>显式的声明</code>为 final；lambda表达式都是实现接口方法，</p><p>jdk8后，在匿名类或 Lambda 表达式中访问的局部变量，如果不是 final 类型的话，编译器自动加上 final 修饰符，即Java8新特性：effectively final。</p><h2 id="_3-新增数据字典" tabindex="-1"><a class="header-anchor" href="#_3-新增数据字典" aria-hidden="true">#</a> 3.新增数据字典</h2><p>工程中新增数据字典的sql</p><p>52000043</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>construct-product<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>entity_def<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>tenant_id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>tree<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>alias<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>config<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>schema_def<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>visible<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>enable_ext_data<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>version<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">52000043</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;FillProjectDict&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;填报项目字典&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;{\\&quot;enableInherited\\&quot;:true}&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;{\\&quot;entityConstraints\\&quot;:[{\\&quot;name\\&quot;:\\&quot;FillProjectDictCodeUK\\&quot;,\\&quot;uniqueFieldsConstraint\\&quot;:{\\&quot;fields\\&quot;:\\&quot;code\\&quot;}},{\\&quot;name\\&quot;:\\&quot;FillProjectDictNameUK\\&quot;,\\&quot;uniqueFieldsConstraint\\&quot;:{\\&quot;fields\\&quot;:\\&quot;name\\&quot;}}],\\&quot;entityPropDefs\\&quot;:[{\\&quot;name\\&quot;:\\&quot;code\\&quot;,\\&quot;alias\\&quot;:\\&quot;编码\\&quot;,\\&quot;required\\&quot;:true,\\&quot;minLength\\&quot;:0,\\&quot;maxLength\\&quot;:50,\\&quot;visible\\&quot;:true,\\&quot;config\\&quot;:{},\\&quot;dataKind\\&quot;:{\\&quot;type\\&quot;:\\&quot;string\\&quot;}},{\\&quot;name\\&quot;:\\&quot;name\\&quot;,\\&quot;alias\\&quot;:\\&quot;名称\\&quot;,\\&quot;required\\&quot;:true,\\&quot;minLength\\&quot;:0,\\&quot;maxLength\\&quot;:100,\\&quot;visible\\&quot;:true,\\&quot;config\\&quot;:{},\\&quot;dataKind\\&quot;:{\\&quot;type\\&quot;:\\&quot;string\\&quot;}},{\\&quot;name\\&quot;:\\&quot;description\\&quot;,\\&quot;alias\\&quot;:\\&quot;说明\\&quot;,\\&quot;required\\&quot;:false,\\&quot;minLength\\&quot;:0,\\&quot;maxLength\\&quot;:255,\\&quot;visible\\&quot;:true,\\&quot;config\\&quot;:{},\\&quot;dataKind\\&quot;:{\\&quot;type\\&quot;:\\&quot;string\\&quot;}}]}z&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>construct-product<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>entity_def_tag_rel<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span>def_id<span class="token punctuation">,</span>tag_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">52000043</span><span class="token punctuation">,</span><span class="token number">52000043</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用字典的名称 查询字典数据，平台提供的接口<code>masterDataBasicClient.queryList</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 根据url返回字典里的内容
     *
     * <span class="token keyword">@param</span> <span class="token parameter">dictName</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FlDynamicDataSource</span><span class="token punctuation">&gt;</span></span> <span class="token function">getFlDynamicDataSource</span><span class="token punctuation">(</span><span class="token class-name">String</span> dictName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FlDynamicDataSource</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">EntityInfo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> response <span class="token operator">=</span> masterDataBasicClient<span class="token punctuation">.</span><span class="token function">queryList</span><span class="token punctuation">(</span>dictName<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypePageQueryDef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EntityInfo</span><span class="token punctuation">&gt;</span></span> body <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">FlDynamicDataSource</span><span class="token punctuation">&gt;</span></span> idAndIdentityMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            body<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> props <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>item<span class="token punctuation">.</span><span class="token function">getProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">FlDynamicDataSource</span> flDynamicDataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FlDynamicDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flDynamicDataSource<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flDynamicDataSource<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flDynamicDataSource<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    flDynamicDataSource<span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;parentId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>flDynamicDataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    idAndIdentityMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>flDynamicDataSource<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>flDynamicDataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">DataDictionaryUtil</span><span class="token punctuation">.</span><span class="token function">buildDataDictionaryTreeData</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>idAndIdentityMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-cpt重复显示标题-删除多余页" tabindex="-1"><a class="header-anchor" href="#_4-cpt重复显示标题-删除多余页" aria-hidden="true">#</a> 4.cpt重复显示标题，删除多余页</h2>`,16),g={href:"https://help.fanruan.com/finereport/doc-view-334.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://bbs.fanruan.com/wenda/question/57960.html",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="_5-jdk8-stream流-map-reduce" tabindex="-1"><a class="header-anchor" href="#_5-jdk8-stream流-map-reduce" aria-hidden="true">#</a> 5.jdk8 stream流 map reduce</h2><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202305101501210.png" alt="image-20230510150137035" loading="lazy"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//list转为想要的Map</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ExcelSheetRowMatch</span><span class="token punctuation">&gt;</span></span> colMatchMap <span class="token operator">=</span> excelSheetDTO<span class="token punctuation">.</span><span class="token function">getRowMatches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">ExcelSheetRowMatch</span><span class="token operator">::</span><span class="token function">getRowID</span><span class="token punctuation">,</span> excelSheetRowMatch <span class="token operator">-&gt;</span> excelSheetRowMatch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//转Map，第一个参数是keyMapper 第二个参数是valueMapper，第三个参数是合并函数</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getPreId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> item<span class="token punctuation">.</span><span class="token function">getPreId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item <span class="token operator">-&gt;</span> item<span class="token punctuation">,</span> <span class="token punctuation">(</span>item1<span class="token punctuation">,</span> item2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> item1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_6月-绿城填报" tabindex="-1"><a class="header-anchor" href="#_6月-绿城填报" aria-hidden="true">#</a> 6月 绿城填报</h1><h2 id="_1-枚举类参数" tabindex="-1"><a class="header-anchor" href="#_1-枚举类参数" aria-hidden="true">#</a> 1.枚举类参数</h2><p>理解枚举类</p><ul><li>NEWS、MONTH_REPORT、GRADE都是对象！！！</li><li><strong>括号类的是枚举对象的变量！！！</strong></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">FillTypeEnum</span> <span class="token punctuation">{</span>
    <span class="token function">NEWS</span><span class="token punctuation">(</span><span class="token string">&quot;新闻公告类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">GRADE</span><span class="token punctuation">(</span><span class="token string">&quot;评分类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">PERSONAL_INFO</span><span class="token punctuation">(</span><span class="token string">&quot;人员信息类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">MEETING_SUMMARY</span><span class="token punctuation">(</span><span class="token string">&quot;会议纪要类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">SITE_CONDITION</span><span class="token punctuation">(</span><span class="token string">&quot;现场情况类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">STANDARD_NODE_PUB_MNR</span><span class="token punctuation">(</span><span class="token string">&quot;标准节点发布管理类&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">MONTH_REPORT</span><span class="token punctuation">(</span><span class="token string">&quot;项目月报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">REGION_REPORT</span><span class="token punctuation">(</span><span class="token string">&quot;区域月报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">GROUP_REPORT</span><span class="token punctuation">(</span><span class="token string">&quot;集团月报&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">FillTypeEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WidgetBillProps</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;项目id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> projectId<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;模板id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> templateId<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;模板类型&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">FillTypeEnum</span> fillType<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果该枚举<code>对象</code>是作为<code>@RequestBody</code>对象<code>WidgetBillProps</code>其中的一个字段，那么得传入枚举类中定义的<mark>变量</mark>，即WidgetBillProps的<code>fillType=项目月报</code>，才可以匹配上</p></li><li><p>如果该枚举对象作为@RequestParam，@PathVariable的参数，那么直接传入枚举对象即可匹配上，如<code>fillType=MONTH_REPORT</code></p></li></ul><h2 id="_2-平台导出-jxls" tabindex="-1"><a class="header-anchor" href="#_2-平台导出-jxls" aria-hidden="true">#</a> 2.平台导出+jxls</h2>`,11),f={href:"https://km.glodon.com/pages/viewpage.action?pageId=252483562",target:"_blank",rel:"noopener noreferrer"},q={href:"https://km.glodon.com/pages/viewpage.action?pageId=253708316",target:"_blank",rel:"noopener noreferrer"},y=p(`<p>主要步骤：</p><ol><li><p>超级后台模块添加<code>report</code>标签，在超级后台的报表管理中，对应的模块下创建excel模板</p></li><li><p>配置好excel模板后，前端通过接口获取到objectId传回后端</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>dev<span class="token punctuation">.</span>glodon<span class="token punctuation">.</span>com<span class="token operator">/</span>complex<span class="token operator">-</span>report<span class="token operator">/</span>integratedTemplates<span class="token operator">?</span>startPos<span class="token operator">=</span><span class="token constant">REPORT_DEMO_MODULE</span>

<span class="token comment">//startPos:发起位置(模块code)</span>

<span class="token comment">//objectId:对应模版的id(通过此id调用bimpm获取附件接口获取对应的excel模版)</span>

<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;data&quot;</span><span class="token operator">:</span>
    <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">5600065</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;整改单demo-hy-bugfix&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;startPos&quot;</span><span class="token operator">:</span> <span class="token string">&quot;REPORT_DEMO_MODULE&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;objectId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;d6b35df8bbcf43f5a1b12b7702a8cb68&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;tenantId&quot;</span><span class="token operator">:</span> <span class="token number">5600331</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;creatorName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;郝宇&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token number">1659507760000</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token number">1659526380000</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>后端接口通过objectId获取到模板文件后，构建<code>context</code>，填充文件中的占位符</p></li><li><p>通过IO流将文件数据转为二进制传到<code>response</code>对象中</p></li><li><p>前端收到后构建下载事件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fillType<span class="token punctuation">,</span> templateId<span class="token punctuation">,</span> baseFillId<span class="token punctuation">,</span> fileName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">expand</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/estate-fill/fillTypes/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fillType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/templates/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>templateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/documents/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseFillId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/detail/excel/export</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> blobUrl <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> $dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $dom<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;风险项目更新表（&quot;</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">&quot;）.xlsx&quot;</span><span class="token punctuation">;</span>
    $dom<span class="token punctuation">.</span>href <span class="token operator">=</span> blobUrl<span class="token punctuation">;</span>
    $dom<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><hr><p>思考：</p><p>0.平台的做法相比之前的poi导出excel，少写了很多接口，前后端一个接口搞定；</p><p>1.借助这个机制也可以将模板文件放到自己后端仓库中，直接创建input输入流使用；</p><p>2.前端的导出目前没有loading的提示，可完善；</p><h1 id="_7月-填报优化" tabindex="-1"><a class="header-anchor" href="#_7月-填报优化" aria-hidden="true">#</a> 7月-填报优化</h1><h2 id="_1-填报技术点" tabindex="-1"><a class="header-anchor" href="#_1-填报技术点" aria-hidden="true">#</a> 1.填报技术点</h2><h3 id="_1-1-平台的导出报表模板管理" tabindex="-1"><a class="header-anchor" href="#_1-1-平台的导出报表模板管理" aria-hidden="true">#</a> 1.1 平台的导出报表模板管理</h3>`,10),_={href:"https://km.glodon.com/pages/viewpage.action?pageId=252483562",target:"_blank",rel:"noopener noreferrer"},w={href:"https://km.glodon.com/pages/viewpage.action?pageId=253708316",target:"_blank",rel:"noopener noreferrer"},T=n("li",null,[n("p",null,"wiki有两次录屏分享和PPT")],-1),D={href:"https://geek.glodon.com/projects/ESTATEPRODUCTPLATFORM/repos/coral-demo/browse",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"_1-2-发送消息分享",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-发送消息分享","aria-hidden":"true"},"#"),s(" 1.2 发送消息分享")],-1),S=n("p",null,"SendMessageUtils",-1),B={href:"https://km.glodon.com/pages/viewpage.action?pageId=253710635",target:"_blank",rel:"noopener noreferrer"},I=n("li",null,"源码coral-message",-1),j=n("li",null,"源码coral-notification",-1),E=n("li",null,[s("源码coral-event "),n("code",null,"MQEventBus"),s("的publish方法；kafka")],-1),R=p(`<h3 id="_1-3-redis" tabindex="-1"><a class="header-anchor" href="#_1-3-redis" aria-hidden="true">#</a> 1.3 redis</h3><ul><li><p>业务背景：创建一个单据时，点入详情会有二开控件，每次点进或者其它人点进需要看到的是同一份控件的数据； 即在首次点入详情时，会<strong>查询控件data数据</strong>（业务需要每次回显上个月或者最新的汇总数据，但此时数据库还没有这条控件），<strong>之后所有的回显编辑都在这一条data上面操作</strong>，总之与外层单据id和填报类型绑定；</p></li><li><p>存在问题：查询的接口只是返回控件数据，点保存的新增接口是数据库插入数据； 场景1：A点进单据，B也点进单据，此时A、B看到的单据是同一份，且单据中的<strong>控件数据也应该是同一份</strong>（即控件id一致），不能出现点保存后，A存了一份控件数据，B也存了一份数据；</p></li><li><p>解决方式：考虑第三方提供控件id，保证唯一性，联想到redis</p><p>查询接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>current_widgetBill <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">WidgetBill</span> widgetBill <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WidgetBill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 从redis中拿 如果有就用redis的，没有就往redis中加一个key</span>
    <span class="token class-name">String</span> key <span class="token operator">=</span> fillType<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> baseFillId <span class="token operator">+</span> widgetCode<span class="token punctuation">;</span>
    redisOperations<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">IDMaker</span><span class="token punctuation">.</span><span class="token function">newId</span><span class="token punctuation">(</span><span class="token class-name">WidgetBill</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> id <span class="token operator">=</span> redisOperations<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setFillType</span><span class="token punctuation">(</span>fillType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setTemplateId</span><span class="token punctuation">(</span>templateId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setBaseFillId</span><span class="token punctuation">(</span>baseFillId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setRegion</span><span class="token punctuation">(</span>region<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setWidgetCode</span><span class="token punctuation">(</span>widgetCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> widgetBill<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新增接口及时清除redis的key</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//保存时清除key</span>
<span class="token keyword">public</span> <span class="token class-name">WidgetBill</span> <span class="token function">saveView</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">FillTypeEnum</span> fillType<span class="token punctuation">,</span> <span class="token class-name">WidgetBillProps</span> widgetBillProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QWidgetBill</span> qWidgetBill <span class="token operator">=</span> <span class="token class-name">QWidgetBill</span><span class="token punctuation">.</span>widgetBill<span class="token punctuation">;</span>
    <span class="token class-name">Predicate</span> predicate <span class="token operator">=</span> qWidgetBill<span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>qWidgetBill<span class="token punctuation">.</span>deleted<span class="token punctuation">.</span><span class="token function">isFalse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WidgetBill</span> widgetBill <span class="token operator">=</span> widgetBillRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>widgetBill <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//保存</span>
        <span class="token class-name">WidgetBill</span> widget <span class="token operator">=</span> <span class="token class-name">MapUtils</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>widgetBillProps<span class="token punctuation">,</span> <span class="token class-name">WidgetBill</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        widget<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        widget<span class="token punctuation">.</span><span class="token function">setFillType</span><span class="token punctuation">(</span>fillType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WidgetBill</span> result <span class="token operator">=</span> widgetBillRepository<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>widget<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    widgetBill<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>widgetBillProps<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    widgetBillRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>widgetBill<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 清除redis的key</span>
 redisOperations<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>fillType<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>widgetBillProps<span class="token punctuation">.</span><span class="token function">getBaseFillId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>widgetBillProps<span class="token punctuation">.</span><span class="token function">getWidgetCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> widgetBill<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-设计模式" tabindex="-1"><a class="header-anchor" href="#_1-4-设计模式" aria-hidden="true">#</a> 1.4 设计模式</h3><h4 id="外观模式-门面模式-facade-pattern" tabindex="-1"><a class="header-anchor" href="#外观模式-门面模式-facade-pattern" aria-hidden="true">#</a> 外观模式（门面模式，Facade Pattern）</h4><ul><li>向现有的系统添加一个接口，来隐藏系统的复杂性</li></ul><p>FlDocController（统一暴露接口）</p><p>FlDocFacadeService（根据分发不同的Service）</p><h4 id="策略模式-strategy-pattern" tabindex="-1"><a class="header-anchor" href="#策略模式-strategy-pattern" aria-hidden="true">#</a> 策略模式（Strategy Pattern）</h4><ul><li>关注的是各个类之间的相互作用，将职责划分清楚，使得我们的代码更加地清晰</li><li>类的行为或其算法可以在运行时更改（根据所传的widgetCode决定应用不同的策略）</li></ul><p>WidgetBuilderFactory（注入所有实现类，match匹配返回具体的实现类）</p><p>WidgetBuilder（统一接口，定义match和其它公共方法）</p><p>RegionInfoTableWidgetBuilder（具体实现类，覆写match和WidgetBuilder接口公共方法）</p><h3 id="_1-5-其它" tabindex="-1"><a class="header-anchor" href="#_1-5-其它" aria-hidden="true">#</a> 1.5 其它</h3><p><strong>顶层接口--父抽象类--子实现类</strong></p><ul><li>涉及到在不同子类中重复使用2~3次以上的代码，可以考虑抽提到抽象基类中的方法进行完善；</li><li>对于查询类（query）接口，可以考虑抽提queryWrapper接口，方便扩展查询条件；</li><li>基类entity的字段也不是固定的，会随着业务场景的不断添加而更加完善；（是否保存saved字段）</li><li>DRY思想：</li></ul><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202307171606874.png" alt="e8b4f0f21d5f5a02e11137b36ff7f2b" loading="lazy"></p><p><img src="https://typora-imgbed-mrru.oss-cn-chengdu.aliyuncs.com/ruyb/202307171606141.jpg" alt="65eee605ada108ba036e42551c07585" loading="lazy"></p><h1 id="_8月-一户一档、裕龙港务" tabindex="-1"><a class="header-anchor" href="#_8月-一户一档、裕龙港务" aria-hidden="true">#</a> 8月-一户一档、裕龙港务</h1><h1 id="_11月-一户一档" tabindex="-1"><a class="header-anchor" href="#_11月-一户一档" aria-hidden="true">#</a> 11月-一户一档</h1><h2 id="_1-不再使用a-equals-b-全部改用objects-equal-a-b" tabindex="-1"><a class="header-anchor" href="#_1-不再使用a-equals-b-全部改用objects-equal-a-b" aria-hidden="true">#</a> 1.不再使用a.equals(b)，全部改用Objects.equal(a,b)</h2><h2 id="_2-分页使用一定要注意" tabindex="-1"><a class="header-anchor" href="#_2-分页使用一定要注意" aria-hidden="true">#</a> 2.分页使用一定要注意</h2><p>场景一：带着分页参数<strong>直接查询数据库</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">findPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>场景二：前端有分页参数，查询别人数据库后，<strong>需要自己对结果分页</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FSLItemDTO</span><span class="token punctuation">&gt;</span></span> pageRes<span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> page <span class="token operator">*</span> pageSize <span class="token operator">+</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>
     pageRes  <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>page <span class="token operator">*</span> pageSize<span class="token punctuation">,</span>  result<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// from:1*8   to:9</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    pageRes  <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>page <span class="token operator">*</span> pageSize<span class="token punctuation">,</span> page <span class="token operator">*</span> pageSize <span class="token operator">+</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function P(O,M){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[s("https://geek.glodon.com/projects/ESTATE-FIELD-PRODUCT/repos/estate-field-fill-server/pull-requests/140/overview"),t(a)])]),k,d,n("p",null,[s("PR例子："),n("a",m,[s("https://geek.glodon.com/projects/JSF-COST/repos/gatling-yuanyang-server/pull-requests/794/overview"),t(a)])]),v,n("p",null,[s("重复显示表头 "),n("a",g,[s("https://help.fanruan.com/finereport/doc-view-334.html"),t(a)])]),n("p",null,[s("删除多余页，就是将表之外的行，列全部清空 "),n("a",b,[s("https://bbs.fanruan.com/wenda/question/57960.html"),t(a)])]),h,n("p",null,[s("复杂报表导出功能介绍:"),n("a",f,[s("https://km.glodon.com/pages/viewpage.action?pageId=252483562"),t(a)])]),n("p",null,[s("复杂报表导出集成文档:"),n("a",q,[s("https://km.glodon.com/pages/viewpage.action?pageId=253708316"),t(a)])]),y,n("ul",null,[n("li",null,[n("p",null,[s("复杂报表导出功能介绍:"),n("a",_,[s("https://km.glodon.com/pages/viewpage.action?pageId=252483562"),t(a)])])]),n("li",null,[n("p",null,[s("复杂报表导出集成文档:"),n("a",w,[s("https://km.glodon.com/pages/viewpage.action?pageId=253708316"),t(a)])])]),T,n("li",null,[n("p",null,[s("report演示代码："),n("a",D,[s("https://geek.glodon.com/projects/ESTATEPRODUCTPLATFORM/repos/coral-demo/browse"),t(a)])])])]),x,S,n("ul",null,[n("li",null,[s("消息服务wiki："),n("a",B,[s("https://km.glodon.com/pages/viewpage.action?pageId=253710635"),t(a)])]),I,j,E]),R])}const L=e(l,[["render",P],["__file","00-后端问题.html.vue"]]);export{L as default};
