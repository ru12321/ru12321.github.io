import{_ as t,W as e,X as p,Y as n,Z as s,$ as o,a0 as c,C as l}from"./framework-715d567f.js";const i={},u=c(`<p>学习资料</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>https://www.runoob.com/js/js-howto.html

https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="一、js基础" tabindex="-1"><a class="header-anchor" href="#一、js基础" aria-hidden="true">#</a> 一、js基础</h1><h2 id="js简介" tabindex="-1"><a class="header-anchor" href="#js简介" aria-hidden="true">#</a> js简介</h2><p>JavaScript 已经由 ECMA（欧洲电脑制造商协会）通过 ECMAScript 实现语言的标准化。</p><p>ECMAScript 6 也称为 ECMAScript 2015。</p><p>ECMAScript 7 也称为 ECMAScript 2016。</p><p><img src="https://picbed-for-mrru-mdfile.oss-cn-chengdu.aliyuncs.com/mrru-glodon/image-20220919135414757.png" alt="image-20220919135414757" loading="lazy"></p><h2 id="js用法" tabindex="-1"><a class="header-anchor" href="#js用法" aria-hidden="true">#</a> js用法</h2><ul><li><p>HTML 中的 Javascript 脚本代码必须script标签位于之间。</p></li><li><p>浏览器会在页面加载时，解释并执行位于script标签之间的 JavaScript 代码</p></li><li><p>也可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。</p></li><li><p>Chrome浏览器的开发者模式中的snippets可以编写代码</p></li></ul><p><img src="https://picbed-for-mrru-mdfile.oss-cn-chengdu.aliyuncs.com/mrru-glodon/image-20220919140217951.png" alt="image-20220919140217951" loading="lazy"></p><h2 id="js-输出" tabindex="-1"><a class="header-anchor" href="#js-输出" aria-hidden="true">#</a> js 输出</h2><p>JavaScript 可以通过不同的方式来输出数据：</p><ul><li>使用 <strong>window.alert()</strong> 弹出警告框。</li><li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li><li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li><li>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</li></ul><p>示例1</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>我的第一个 Web 页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我的第一个段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;段落已修改。&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>document.getElementById(&quot;demo&quot;)</strong> 是使用 id 属性来查找 HTML 元素的 JavaScript 代码 。</p><p><strong>innerHTML = &quot;段落已修改。&quot;</strong> 是用于修改元素的 HTML 内容(innerHTML)的 JavaScript 代码。</p><p>示例2</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>我的第一个 Web 页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我的第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请使用 document.write() 仅仅向文档输出写内容。</p><p><mark>如果在文档已完成加载后执行 document.write，整个 HTML 页面将被覆盖。</mark></p><h2 id="js语法" tabindex="-1"><a class="header-anchor" href="#js语法" aria-hidden="true">#</a> js语法</h2><h3 id="字面量" tabindex="-1"><a class="header-anchor" href="#字面量" aria-hidden="true">#</a> 字面量</h3><p><strong>数字（Number）字面量</strong> 可以是整数或者是小数，或者是科学计数(e)。 123e5</p><p><strong>字符串（String）字面量</strong> 可以使用单引号或双引号:</p><p><strong>表达式字面量</strong> 用于计算： 5+6 5*10</p><p><strong>数组（Array）字面量</strong> 定义一个数组：</p><p><strong>对象（Object）字面量</strong> 定义一个对象：</p><p><strong>函数（Function）字面量</strong> 定义一个函数</p><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><p>JavaScript 使用关键字 <strong>var</strong> 来定义变量， 使用等号来为变量赋值；</p><p>变量是一个<strong>名称</strong>。字面量是一个<strong>值</strong></p><ul><li><strong>变量必须以字母开头</strong></li><li>变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）</li><li>变量名称对大小写敏感（y 和 Y 是不同的变量）</li></ul><p>未使用值来声明的变量，其值实际上是 undefined</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> carname<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>ES6允许我们使用 <strong>const 关键字</strong>来定义一个常量，使用 <strong>let 关键字</strong>定义的限定范围内作用域的变量</p><h3 id="语句" tabindex="-1"><a class="header-anchor" href="#语句" aria-hidden="true">#</a> 语句</h3><ul><li><p>语句是用分号分隔</p></li><li><p>可以在文本字符串中使用反斜杠对代码行进行换行</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;你好 \\
世界!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>JavaScript 是脚本语言，<strong>浏览器会在读取代码时，逐行地执行脚本代码</strong></li></ul><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><ul><li>双斜杠 <strong>//</strong> 后的内容将会被浏览器忽略</li><li>多行注释 /* */</li></ul><h3 id="大小写" tabindex="-1"><a class="header-anchor" href="#大小写" aria-hidden="true">#</a> 大小写</h3><p>JavaScript 对大小写是敏感的。驼峰法的命名规则</p><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><p><strong>值类型(基本类型)</strong>：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol。</p><p><strong>引用数据类型（对象类型）</strong>：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）。</p><blockquote><p><em>Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。</em></p></blockquote><ul><li>动态类型</li></ul><p>意味着相同的变量可用作不同的类型：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> x<span class="token punctuation">;</span>               <span class="token comment">// x 为 undefined</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>           <span class="token comment">// 现在 x 为数字</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">;</span>      <span class="token comment">// 现在 x 为字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>变量的数据类型可以使用 <strong>typeof</strong> 操作符来查看：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">typeof</span> <span class="token string">&quot;John&quot;</span>                <span class="token comment">// 返回 string</span>
<span class="token keyword">typeof</span> <span class="token number">3.14</span>                  <span class="token comment">// 返回 number</span>
<span class="token keyword">typeof</span> <span class="token boolean">false</span>                 <span class="token comment">// 返回 boolean</span>
<span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>             <span class="token comment">// 返回 object</span>
<span class="token keyword">typeof</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">}</span> <span class="token comment">// 返回 object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><ul><li><p>对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：</p></li><li><p>JavaScript 变量均为对象。当您声明一个变量时，就创建了一个新的对象。</p></li></ul><p>访问对象属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>person<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span> <span class="token comment">//方式1</span>

person<span class="token punctuation">[</span><span class="token string">&quot;lastName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//方式2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><p>函数就是包裹在花括号中的代码块，前面使用了关键词 function：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">functionname</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 执行代码</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,62),r={href:"https://www.runoob.com/js/js-scope.html",target:"_blank",rel:"noopener noreferrer"},d=n("h1",{id:"二、js进阶",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、js进阶","aria-hidden":"true"},"#"),s(" 二、js进阶")],-1),k=n("h2",{id:"_1-js引擎、调用堆栈",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-js引擎、调用堆栈","aria-hidden":"true"},"#"),s(" 1.js引擎、调用堆栈")],-1),g=n("p",null,[s("Google V8 引擎是一个比较流行的 JavaScript 引擎示例。V8 引擎是在诸如 "),n("code",null,"Chrome"),s(" 和 "),n("code",null,"Node.js"),s(" 等内部使用的")],-1);function m(v,h){const a=l("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",r,[s("https://www.runoob.com/js/js-scope.html"),o(a)])]),d,k,g])}const j=t(i,[["render",m],["__file","javascript.html.vue"]]);export{j as default};
